{"version":3,"file":"react-syntax-highlighter_languages_highlight_java/index.js","mappings":"4HACA,IAAIA,EAAgB,kBAChBC,EAAO,OAAOD,KACdE,EAAY,8BACZC,EAAU,CACZC,UAAW,SACXC,SAAU,CAGV,CACEC,MAAO,QAAQN,OAAmBC,aAAgBA,gBAAwBD,gBAG5E,CACEM,MAAO,OAAON,OAAmBC,iCAChC,CACDK,MAAO,IAAIL,gBACV,CACDK,MAAO,OAAON,eAGhB,CACEM,MAAO,aAAaJ,WAAmBA,UAAkBA,gBAA6BF,gBAGxF,CACEM,MAAO,kCAGT,CACEA,MAAO,YAAYJ,cAGrB,CACEI,MAAO,0BAGT,CACEA,MAAO,kCAETC,UAAW,GA8GbC,EAAOC,QApGP,SAAcC,GACZ,IAAIC,EAAgB,iCAChBC,EAAmBD,EAAgB,KAAOA,EAAgB,aAAeA,EAAgB,QACzFE,EAAW,iWACXC,EAAa,CACfV,UAAW,OACXE,MAAO,IAAMK,EACbI,SAAU,CAAC,CACTT,MAAO,KACPU,IAAK,KACLD,SAAU,CAAC,WAGf,MAAME,EAASd,EACf,MAAO,CACLe,KAAM,OACNC,QAAS,CAAC,OACVC,SAAUP,EACVQ,QAAS,QACTN,SAAU,CAACL,EAAKY,QAAQ,UAAW,OAAQ,CACzCf,UAAW,EACXQ,SAAU,CAAC,CAETT,MAAO,OACPC,UAAW,GACV,CACDH,UAAW,SACXE,MAAO,iBAIX,CACEA,MAAO,wBACPc,SAAU,SACVb,UAAW,GACVG,EAAKa,oBAAqBb,EAAKc,qBAAsBd,EAAKe,iBAAkBf,EAAKgB,kBAAmB,CACrGtB,UAAW,QACXuB,cAAe,uBACfX,IAAK,QACLY,YAAY,EAKZrB,UAAW,EACXa,SAAU,uBACVC,QAAS,WACTN,SAAU,CAAC,CACTY,cAAe,sBACdjB,EAAKmB,wBACP,CAGDF,cAAe,wBACfpB,UAAW,GACV,CACDH,UAAW,QACXE,MAAO,aAAeI,EAAKoB,oBAAsB,UACjDC,aAAa,EACbH,YAAY,EACZZ,IAAK,QACLI,SAAUP,EACVE,SAAU,CAAC,CACTY,cAAe,UACd,CACDrB,MAAOI,EAAKoB,oBAAsB,UAClCC,aAAa,EACbxB,UAAW,EACXQ,SAAU,CAACL,EAAKmB,wBACf,CACDzB,UAAW,SACXE,MAAO,KACPU,IAAK,KACLI,SAAUP,EACVN,UAAW,EACXQ,SAAU,CAACL,EAAKc,uBACfd,EAAKa,oBAAqBb,EAAKc,uBACjC,CACDpB,UAAW,WACXE,MAAO,IAAMM,EAAmB,SAAWF,EAAKoB,oBAAsB,UACtEC,aAAa,EACbf,IAAK,QACLY,YAAY,EACZR,SAAUP,EACVE,SAAU,CAAC,CACTT,MAAOI,EAAKoB,oBAAsB,UAClCC,aAAa,EACbxB,UAAW,EACXQ,SAAU,CAACL,EAAKmB,wBACf,CACDzB,UAAW,SACXE,MAAO,KACPU,IAAK,KACLI,SAAUP,EACVN,UAAW,EACXQ,SAAU,CAACD,EAAYJ,EAAKe,iBAAkBf,EAAKgB,kBAAmBT,EAAQP,EAAKc,uBAClFd,EAAKa,oBAAqBb,EAAKc,uBACjCP,EAAQH,GAEf,C","sources":["webpack://ai-desktop-knowledge-base-app/./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/java.js"],"sourcesContent":["// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n  // DecimalFloatingPointLiteral\n  // including ExponentPart\n  {\n    begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` + `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b`\n  },\n  // excluding ExponentPart\n  {\n    begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)`\n  }, {\n    begin: `(${frac})[fFdD]?\\\\b`\n  }, {\n    begin: `\\\\b(${decimalDigits})[fFdD]\\\\b`\n  },\n  // HexadecimalFloatingPointLiteral\n  {\n    begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` + `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b`\n  },\n  // DecimalIntegerLiteral\n  {\n    begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b'\n  },\n  // HexIntegerLiteral\n  {\n    begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b`\n  },\n  // OctalIntegerLiteral\n  {\n    begin: '\\\\b0(_*[0-7])*[lL]?\\\\b'\n  },\n  // BinaryIntegerLiteral\n  {\n    begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b'\n  }],\n  relevance: 0\n};\n\n/*\nLanguage: Java\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\nCategory: common, enterprise\nWebsite: https://www.java.com/\n*/\n\nfunction java(hljs) {\n  var JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\n  var GENERIC_IDENT_RE = JAVA_IDENT_RE + '(<' + JAVA_IDENT_RE + '(\\\\s*,\\\\s*' + JAVA_IDENT_RE + ')*>)?';\n  var KEYWORDS = 'false synchronized int abstract float private char boolean var static null if const ' + 'for true while long strictfp finally protected import native final void ' + 'enum else break transient catch instanceof byte super volatile case assert short ' + 'package default double public try this switch continue throws protected public private ' + 'module requires exports do';\n  var ANNOTATION = {\n    className: 'meta',\n    begin: '@' + JAVA_IDENT_RE,\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [\"self\"] // allow nested () inside our annotation\n    }]\n  };\n  const NUMBER = NUMERIC;\n  return {\n    name: 'Java',\n    aliases: ['jsp'],\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [hljs.COMMENT('/\\\\*\\\\*', '\\\\*/', {\n      relevance: 0,\n      contains: [{\n        // eat up @'s in emails to prevent them to be recognized as doctags\n        begin: /\\w+@/,\n        relevance: 0\n      }, {\n        className: 'doctag',\n        begin: '@[A-Za-z]+'\n      }]\n    }),\n    // relevance boost\n    {\n      begin: /import java\\.[a-z]+\\./,\n      keywords: \"import\",\n      relevance: 2\n    }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, {\n      className: 'class',\n      beginKeywords: 'class interface enum',\n      end: /[{;=]/,\n      excludeEnd: true,\n      // TODO: can this be removed somehow?\n      // an extra boost because Java is more popular than other languages with\n      // this same syntax feature (this is just to preserve our tests passing\n      // for now)\n      relevance: 1,\n      keywords: 'class interface enum',\n      illegal: /[:\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends implements'\n      }, hljs.UNDERSCORE_TITLE_MODE]\n    }, {\n      // Expression keywords prevent 'keyword Name(...)' from being\n      // recognized as a function definition\n      beginKeywords: 'new throw return else',\n      relevance: 0\n    }, {\n      className: 'class',\n      begin: 'record\\\\s+' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n      returnBegin: true,\n      excludeEnd: true,\n      end: /[{;=]/,\n      keywords: KEYWORDS,\n      contains: [{\n        beginKeywords: \"record\"\n      }, {\n        begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n        returnBegin: true,\n        relevance: 0,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      }, {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [hljs.C_BLOCK_COMMENT_MODE]\n      }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n    }, {\n      className: 'function',\n      begin: '(' + GENERIC_IDENT_RE + '\\\\s+)+' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n      returnBegin: true,\n      end: /[{;=]/,\n      excludeEnd: true,\n      keywords: KEYWORDS,\n      contains: [{\n        begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n        returnBegin: true,\n        relevance: 0,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      }, {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [ANNOTATION, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, NUMBER, hljs.C_BLOCK_COMMENT_MODE]\n      }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n    }, NUMBER, ANNOTATION]\n  };\n}\nmodule.exports = java;"],"names":["decimalDigits","frac","hexDigits","NUMERIC","className","variants","begin","relevance","module","exports","hljs","JAVA_IDENT_RE","GENERIC_IDENT_RE","KEYWORDS","ANNOTATION","contains","end","NUMBER","name","aliases","keywords","illegal","COMMENT","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","APOS_STRING_MODE","QUOTE_STRING_MODE","beginKeywords","excludeEnd","UNDERSCORE_TITLE_MODE","UNDERSCORE_IDENT_RE","returnBegin"],"sourceRoot":""}