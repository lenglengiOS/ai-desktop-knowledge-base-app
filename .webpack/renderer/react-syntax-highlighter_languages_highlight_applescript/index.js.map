{"version":3,"file":"react-syntax-highlighter_languages_highlight_applescript/index.js","mappings":"4HASA,SAASA,EAAOC,GACd,OAAKA,EACa,iBAAPA,EAAwBA,EAC5BA,EAAGD,OAFM,IAGlB,CAMA,SAASE,KAAUC,GAEjB,OADeA,EAAKC,KAAIC,GAAKL,EAAOK,KAAIC,KAAK,GAE/C,CASA,SAASC,KAAUJ,GAEjB,MADe,IAAMA,EAAKC,KAAIC,GAAKL,EAAOK,KAAIC,KAAK,KAAO,GAE5D,CA0DAE,EAAOC,QA/CP,SAAqBC,GACnB,MAAMC,EAASD,EAAKE,QAAQF,EAAKG,kBAAmB,CAClDC,QAAS,OAELC,EAAS,CACbC,UAAW,SACXC,MAAO,KACPC,IAAK,KACLC,SAAU,CAAC,OAAQT,EAAKU,cAAeT,IAEnCU,EAAiBX,EAAKY,QAAQ,KAAM,KAMpCC,EAAW,CAACF,EALKX,EAAKY,QAAQ,OAAQ,OAAQ,CAClDH,SAAU,CAAC,OAEXE,KAEgDX,EAAKc,mBAGvD,MAAO,CACLC,KAAM,cACNC,QAAS,CAAC,aACVC,SAAU,CACRC,QAAS,0iBACTC,QAAS,mEACTC,SAAU,sUAEZX,SAAU,CAACR,EAAQD,EAAKU,cAAe,CACrCJ,UAAW,WACXC,MAAOf,EAAO,KAAMK,EAXG,iBAAkB,gBAAiB,WAAY,sBAAuB,eAAgB,UAAW,0BAA2B,gBAAiB,eAAgB,kBAAmB,sBAAuB,gBAAiB,aAAc,mBAAoB,cAAe,cAAe,0BAA2B,uBAAwB,2BAA4B,mBAAoB,oFAAqF,0BAWrb,OACjD,CACDS,UAAW,WACXC,MAAO,gBACN,CACDD,UAAW,UACXC,MAAO,gEACN,CACDD,UAAW,UACXC,MAAOf,EAAO,KAAMK,EArBE,aAAc,aAAc,aAAc,SAAU,eAAgB,kEAAmE,kCAAmC,8BAA+B,eAAgB,uBAAwB,oBAAqB,oBAAqB,qBAAsB,eAqBtR,OAChD,CACDwB,cAAe,KACfjB,QAAS,WACTK,SAAU,CAACT,EAAKsB,sBAAuBjB,OACnCQ,GACNT,QAAS,kBAEb,C","sources":["webpack://ai-desktop-knowledge-base-app/./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/applescript.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map(x => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: AppleScript\nAuthors: Nathan Grigg <nathan@nathanamy.org>, Dr. Drang <drdrang@gmail.com>\nCategory: scripting\nWebsite: https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction applescript(hljs) {\n  const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null\n  });\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    contains: ['self', hljs.C_NUMBER_MODE, STRING]\n  };\n  const COMMENT_MODE_1 = hljs.COMMENT(/--/, /$/);\n  const COMMENT_MODE_2 = hljs.COMMENT(/\\(\\*/, /\\*\\)/, {\n    contains: ['self',\n    // allow nesting\n    COMMENT_MODE_1]\n  });\n  const COMMENTS = [COMMENT_MODE_1, COMMENT_MODE_2, hljs.HASH_COMMENT_MODE];\n  const KEYWORD_PATTERNS = [/apart from/, /aside from/, /instead of/, /out of/, /greater than/, /isn't|(doesn't|does not) (equal|come before|come after|contain)/, /(greater|less) than( or equal)?/, /(starts?|ends|begins?) with/, /contained by/, /comes (before|after)/, /a (ref|reference)/, /POSIX (file|path)/, /(date|time) string/, /quoted form/];\n  const BUILT_IN_PATTERNS = [/clipboard info/, /the clipboard/, /info for/, /list (disks|folder)/, /mount volume/, /path to/, /(close|open for) access/, /(get|set) eof/, /current date/, /do shell script/, /get volume settings/, /random number/, /set volume/, /system attribute/, /system info/, /time to GMT/, /(load|run|store) script/, /scripting components/, /ASCII (character|number)/, /localized string/, /choose (application|color|file|file name|folder|from list|remote application|URL)/, /display (alert|dialog)/];\n  return {\n    name: 'AppleScript',\n    aliases: ['osascript'],\n    keywords: {\n      keyword: 'about above after against and around as at back before beginning ' + 'behind below beneath beside between but by considering ' + 'contain contains continue copy div does eighth else end equal ' + 'equals error every exit fifth first for fourth from front ' + 'get given global if ignoring in into is it its last local me ' + 'middle mod my ninth not of on onto or over prop property put ref ' + 'reference repeat returning script second set seventh since ' + 'sixth some tell tenth that the|0 then third through thru ' + 'timeout times to transaction try until where while whose with ' + 'without',\n      literal: 'AppleScript false linefeed return pi quote result space tab true',\n      built_in: 'alias application boolean class constant date file integer list ' + 'number real record string text ' + 'activate beep count delay launch log offset read round ' + 'run say summarize write ' + 'character characters contents day frontmost id item length ' + 'month name paragraph paragraphs rest reverse running time version ' + 'weekday word words year'\n    },\n    contains: [STRING, hljs.C_NUMBER_MODE, {\n      className: 'built_in',\n      begin: concat(/\\b/, either(...BUILT_IN_PATTERNS), /\\b/)\n    }, {\n      className: 'built_in',\n      begin: /^\\s*return\\b/\n    }, {\n      className: 'literal',\n      begin: /\\b(text item delimiters|current application|missing value)\\b/\n    }, {\n      className: 'keyword',\n      begin: concat(/\\b/, either(...KEYWORD_PATTERNS), /\\b/)\n    }, {\n      beginKeywords: 'on',\n      illegal: /[${=;\\n]/,\n      contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]\n    }, ...COMMENTS],\n    illegal: /\\/\\/|->|=>|\\[\\[/\n  };\n}\nmodule.exports = applescript;"],"names":["source","re","concat","args","map","x","join","either","module","exports","hljs","STRING","inherit","QUOTE_STRING_MODE","illegal","PARAMS","className","begin","end","contains","C_NUMBER_MODE","COMMENT_MODE_1","COMMENT","COMMENTS","HASH_COMMENT_MODE","name","aliases","keywords","keyword","literal","built_in","beginKeywords","UNDERSCORE_TITLE_MODE"],"sourceRoot":""}