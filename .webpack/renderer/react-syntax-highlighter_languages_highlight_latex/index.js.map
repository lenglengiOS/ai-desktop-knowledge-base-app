{"version":3,"file":"react-syntax-highlighter_languages_highlight_latex/index.js","mappings":"4HAoOAA,EAAOC,QAjMP,SAAeC,GACb,MAyBMC,EAAwB,CAAC,CAC7BC,MAAO,oBACN,CACDA,MAAO,oBACN,CACDA,MAAO,oBACN,CACDA,MAAO,oBACN,CACDA,MAAO,oBACN,CACDA,MAAO,yBA4CHC,EAA0B,CA1CP,CACvBC,UAAW,UACXF,MAAO,KACPG,UAAW,EACXC,SAAU,CAAC,CACTC,YAAY,EACZL,MA1DN,YAAmBM,GAEjB,MADe,IAAMA,EAAKC,KAAIC,IAAKC,OAdrBC,EAc4BF,GAZxB,iBAAPE,EAAwBA,EAC5BA,EAAGD,OAFM,KADlB,IAAgBC,CAc8B,IAAEC,KAAK,KAAO,GAE5D,CAW8BC,IAAU,CAAC,8CAA+C,0CAA2C,mCAAoC,6CAA8C,yBAA0B,uBAAwB,gCAAiC,uBAAwB,8DAA+D,mDAAoD,wBAAyB,gBAAiB,yDAA0D,UAAW,2DAA4D,8EAA+E,sEAAuE,yEAA0E,4EAA6E,yDAAyDL,KAAIM,GAAQA,EAAO,sBA6Ch9B,CACDR,YAAY,EACZL,MA9Ca,IAAIc,OAAO,CAI5B,wDAIA,+CAKA,iCAEA,uBAAwB,kBAAmB,kBAAmB,kBAAmB,sBAAuB,eAAeP,KAAIQ,GAAWA,EAAU,mBAAkBJ,KAAK,OAgClK,CACDN,YAAY,EACZW,SAAUjB,GACT,CACDM,YAAY,EACZF,UAAW,EACXa,SArCgB,CAAC,CACnBhB,MAAO,cAGT,CACEA,MAAO,mBAmCW,CAClBE,UAAW,SACXC,UAAW,EACXH,MAAO,SAEiB,CAExBgB,SAAUjB,GAEY,CACtBG,UAAW,WACXC,UAAW,EACXH,MAAO,UAEa,CACpBE,UAAW,OACXF,MAAO,SACPiB,IAAK,IACLd,UAAW,IAEGL,EAAKoB,QAAQ,IAAK,IAAK,CACrCf,UAAW,KAGPgB,EAA0B,CAC9BnB,MAAO,KACPiB,IAAK,KACLd,UAAW,EACXC,SAAU,CAAC,UAAWH,IAElBmB,EAAkBtB,EAAKuB,QAAQF,EAAyB,CAC5DhB,UAAW,EACXE,YAAY,EACZD,SAAU,CAACe,KAA4BlB,KAEnCqB,EAAoB,CACxBtB,MAAO,KACPiB,IAAK,KACLZ,YAAY,EACZF,UAAW,EACXC,SAAU,CAACe,KAA4BlB,IAEnCsB,EAAgB,CACpBvB,MAAO,MACPG,UAAW,GAEPqB,EAAa,CAACJ,GACdK,EAAa,CAACH,GACdI,EAAoB,SAAUC,EAAKC,GACvC,MAAO,CACLxB,SAAU,CAACmB,GACXM,OAAQ,CACN1B,UAAW,EACXC,SAAUuB,EACVE,OAAQD,GAGd,EACME,EAAS,SAAUC,EAAQH,GAC/B,MAAO,CACL5B,MAAO,OAAS+B,EAAS,kBACzBC,SAAU,CACRC,SAAU,cACVC,QAAS,KAAOH,GAElB5B,UAAW,EACXC,SAAU,CAACmB,GACXM,OAAQD,EAEZ,EACMO,EAAY,SAAUC,EAASR,GACnC,OAAO9B,EAAKuB,QAAQ,CAClBrB,MAAO,wCAA0CoC,EAAU,OAC3DJ,SAAU,CACRC,SAAU,cACVC,QAAS,WAEX/B,UAAW,GACVuB,EAAkBF,EAAYI,GACnC,EACMS,EAA2B,CAACC,EAAY,WACrCxC,EAAKyC,kBAAkB,CAC5BrC,UAAWoC,EACXtC,MAAO,YACPiB,IAAK,YACLuB,cAAc,EACdC,YAAY,EACZpC,YAAY,IAGVqC,EAAyB,SAAUN,GACvC,MAAO,CACLlC,UAAW,SACXe,IAAK,gBAAkBmB,EAAU,OAErC,EACMO,EAA4B,CAACL,EAAY,YACtC,CACLnC,UAAW,EACXH,MAAO,KACP6B,OAAQ,CACNxB,YAAY,EACZD,SAAU,CAAC,CACTF,UAAWoC,EACXrB,IAAK,SACLZ,YAAY,EACZD,SAAU,CAAC,CACTJ,MAAO,KACPiB,IAAK,KACLd,UAAW,EACXC,SAAU,CAAC,eAmBrB,MAAO,CACLwC,KAAM,QACNC,QAAS,CAAC,OACVzC,SAAU,IAhBS,CAAC,OAAQ,aAAaG,KAAIwB,GAAUD,EAAOC,EAAQ,CACtE3B,SAAU,CAACiC,SACRP,EAAO,OAAQJ,EAAkBF,EAAY,CAChDpB,SAAU,CAACiC,QACRP,EAAO,aAAcJ,EAAkBF,EAAY,CACtDpB,SAAU,CAACuC,IAA6BN,QACrCP,EAAO,MAAO,CACjB1B,SAAU,CAACuC,EAA0B,QAASA,EAA0B,WACtEb,EAAO,WAAY,CACrB1B,SAAU,CAACuC,EAA0B,WACnCb,EAAO,OAAQJ,EAAkBD,EAAY,CAC/CrB,SAAU,CAACuC,EAA0B,eAC/B,GAAGG,UAAU,CAAC,GAAI,OAAOvC,KAAIwC,GAAU,CAACZ,EAAU,WAAaY,EAAQL,EAAuB,WAAaK,IAAUZ,EAAU,eAAiBY,EAAQrB,EAAkBF,EAAYkB,EAAuB,eAAiBK,QAAc,CAAC,GAAI,IAAK,KAAKxC,KAAIyC,GAAUb,EAAUa,EAAS,WAAaD,EAAQrB,EAAkBD,EAAYiB,EAAuBM,EAAS,WAAaD,WAAeZ,EAAU,SAAUT,EAAkBD,EAAYC,EAAkBF,EAAYkB,EAAuB,gBAI7dzC,GAE/B,C","sources":["webpack://ai-desktop-knowledge-base-app/./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/latex.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map(x => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: LaTeX\nAuthor: Benedikt Wilde <bwilde@posteo.de>\nWebsite: https://www.latex-project.org\nCategory: markup\n*/\n\n/** @type LanguageFn */\nfunction latex(hljs) {\n  const KNOWN_CONTROL_WORDS = either(...['(?:NeedsTeXFormat|RequirePackage|GetIdInfo)', 'Provides(?:Expl)?(?:Package|Class|File)', '(?:DeclareOption|ProcessOptions)', '(?:documentclass|usepackage|input|include)', 'makeat(?:letter|other)', 'ExplSyntax(?:On|Off)', '(?:new|renew|provide)?command', '(?:re)newenvironment', '(?:New|Renew|Provide|Declare)(?:Expandable)?DocumentCommand', '(?:New|Renew|Provide|Declare)DocumentEnvironment', '(?:(?:e|g|x)?def|let)', '(?:begin|end)', '(?:part|chapter|(?:sub){0,2}section|(?:sub)?paragraph)', 'caption', '(?:label|(?:eq|page|name)?ref|(?:paren|foot|super)?cite)', '(?:alpha|beta|[Gg]amma|[Dd]elta|(?:var)?epsilon|zeta|eta|[Tt]heta|vartheta)', '(?:iota|(?:var)?kappa|[Ll]ambda|mu|nu|[Xx]i|[Pp]i|varpi|(?:var)rho)', '(?:[Ss]igma|varsigma|tau|[Uu]psilon|[Pp]hi|varphi|chi|[Pp]si|[Oo]mega)', '(?:frac|sum|prod|lim|infty|times|sqrt|leq|geq|left|right|middle|[bB]igg?)', '(?:[lr]angle|q?quad|[lcvdi]?dots|d?dot|hat|tilde|bar)'].map(word => word + '(?![a-zA-Z@:_])'));\n  const L3_REGEX = new RegExp([\n  // A function \\module_function_name:signature or \\__module_function_name:signature,\n  // where both module and function_name need at least two characters and\n  // function_name may contain single underscores.\n  '(?:__)?[a-zA-Z]{2,}_[a-zA-Z](?:_?[a-zA-Z])+:[a-zA-Z]*',\n  // A variable \\scope_module_and_name_type or \\scope__module_ane_name_type,\n  // where scope is one of l, g or c, type needs at least two characters\n  // and module_and_name may contain single underscores.\n  '[lgc]__?[a-zA-Z](?:_?[a-zA-Z])*_[a-zA-Z]{2,}',\n  // A quark \\q_the_name or \\q__the_name or\n  // scan mark \\s_the_name or \\s__vthe_name,\n  // where variable_name needs at least two characters and\n  // may contain single underscores.\n  '[qs]__?[a-zA-Z](?:_?[a-zA-Z])+',\n  // Other LaTeX3 macro names that are not covered by the three rules above.\n  'use(?:_i)?:[a-zA-Z]*', '(?:else|fi|or):', '(?:if|cs|exp):w', '(?:hbox|vbox):n', '::[a-zA-Z]_unbraced', '::[a-zA-Z:]'].map(pattern => pattern + '(?![a-zA-Z:_])').join('|'));\n  const L2_VARIANTS = [{\n    begin: /[a-zA-Z@]+/\n  },\n  // control word\n  {\n    begin: /[^a-zA-Z@]?/\n  } // control symbol\n  ];\n  const DOUBLE_CARET_VARIANTS = [{\n    begin: /\\^{6}[0-9a-f]{6}/\n  }, {\n    begin: /\\^{5}[0-9a-f]{5}/\n  }, {\n    begin: /\\^{4}[0-9a-f]{4}/\n  }, {\n    begin: /\\^{3}[0-9a-f]{3}/\n  }, {\n    begin: /\\^{2}[0-9a-f]{2}/\n  }, {\n    begin: /\\^{2}[\\u0000-\\u007f]/\n  }];\n  const CONTROL_SEQUENCE = {\n    className: 'keyword',\n    begin: /\\\\/,\n    relevance: 0,\n    contains: [{\n      endsParent: true,\n      begin: KNOWN_CONTROL_WORDS\n    }, {\n      endsParent: true,\n      begin: L3_REGEX\n    }, {\n      endsParent: true,\n      variants: DOUBLE_CARET_VARIANTS\n    }, {\n      endsParent: true,\n      relevance: 0,\n      variants: L2_VARIANTS\n    }]\n  };\n  const MACRO_PARAM = {\n    className: 'params',\n    relevance: 0,\n    begin: /#+\\d?/\n  };\n  const DOUBLE_CARET_CHAR = {\n    // relevance: 1\n    variants: DOUBLE_CARET_VARIANTS\n  };\n  const SPECIAL_CATCODE = {\n    className: 'built_in',\n    relevance: 0,\n    begin: /[$&^_]/\n  };\n  const MAGIC_COMMENT = {\n    className: 'meta',\n    begin: '% !TeX',\n    end: '$',\n    relevance: 10\n  };\n  const COMMENT = hljs.COMMENT('%', '$', {\n    relevance: 0\n  });\n  const EVERYTHING_BUT_VERBATIM = [CONTROL_SEQUENCE, MACRO_PARAM, DOUBLE_CARET_CHAR, SPECIAL_CATCODE, MAGIC_COMMENT, COMMENT];\n  const BRACE_GROUP_NO_VERBATIM = {\n    begin: /\\{/,\n    end: /\\}/,\n    relevance: 0,\n    contains: ['self', ...EVERYTHING_BUT_VERBATIM]\n  };\n  const ARGUMENT_BRACES = hljs.inherit(BRACE_GROUP_NO_VERBATIM, {\n    relevance: 0,\n    endsParent: true,\n    contains: [BRACE_GROUP_NO_VERBATIM, ...EVERYTHING_BUT_VERBATIM]\n  });\n  const ARGUMENT_BRACKETS = {\n    begin: /\\[/,\n    end: /\\]/,\n    endsParent: true,\n    relevance: 0,\n    contains: [BRACE_GROUP_NO_VERBATIM, ...EVERYTHING_BUT_VERBATIM]\n  };\n  const SPACE_GOBBLER = {\n    begin: /\\s+/,\n    relevance: 0\n  };\n  const ARGUMENT_M = [ARGUMENT_BRACES];\n  const ARGUMENT_O = [ARGUMENT_BRACKETS];\n  const ARGUMENT_AND_THEN = function (arg, starts_mode) {\n    return {\n      contains: [SPACE_GOBBLER],\n      starts: {\n        relevance: 0,\n        contains: arg,\n        starts: starts_mode\n      }\n    };\n  };\n  const CSNAME = function (csname, starts_mode) {\n    return {\n      begin: '\\\\\\\\' + csname + '(?![a-zA-Z@:_])',\n      keywords: {\n        $pattern: /\\\\[a-zA-Z]+/,\n        keyword: '\\\\' + csname\n      },\n      relevance: 0,\n      contains: [SPACE_GOBBLER],\n      starts: starts_mode\n    };\n  };\n  const BEGIN_ENV = function (envname, starts_mode) {\n    return hljs.inherit({\n      begin: '\\\\\\\\begin(?=[ \\t]*(\\\\r?\\\\n[ \\t]*)?\\\\{' + envname + '\\\\})',\n      keywords: {\n        $pattern: /\\\\[a-zA-Z]+/,\n        keyword: '\\\\begin'\n      },\n      relevance: 0\n    }, ARGUMENT_AND_THEN(ARGUMENT_M, starts_mode));\n  };\n  const VERBATIM_DELIMITED_EQUAL = (innerName = \"string\") => {\n    return hljs.END_SAME_AS_BEGIN({\n      className: innerName,\n      begin: /(.|\\r?\\n)/,\n      end: /(.|\\r?\\n)/,\n      excludeBegin: true,\n      excludeEnd: true,\n      endsParent: true\n    });\n  };\n  const VERBATIM_DELIMITED_ENV = function (envname) {\n    return {\n      className: 'string',\n      end: '(?=\\\\\\\\end\\\\{' + envname + '\\\\})'\n    };\n  };\n  const VERBATIM_DELIMITED_BRACES = (innerName = \"string\") => {\n    return {\n      relevance: 0,\n      begin: /\\{/,\n      starts: {\n        endsParent: true,\n        contains: [{\n          className: innerName,\n          end: /(?=\\})/,\n          endsParent: true,\n          contains: [{\n            begin: /\\{/,\n            end: /\\}/,\n            relevance: 0,\n            contains: [\"self\"]\n          }]\n        }]\n      }\n    };\n  };\n  const VERBATIM = [...['verb', 'lstinline'].map(csname => CSNAME(csname, {\n    contains: [VERBATIM_DELIMITED_EQUAL()]\n  })), CSNAME('mint', ARGUMENT_AND_THEN(ARGUMENT_M, {\n    contains: [VERBATIM_DELIMITED_EQUAL()]\n  })), CSNAME('mintinline', ARGUMENT_AND_THEN(ARGUMENT_M, {\n    contains: [VERBATIM_DELIMITED_BRACES(), VERBATIM_DELIMITED_EQUAL()]\n  })), CSNAME('url', {\n    contains: [VERBATIM_DELIMITED_BRACES(\"link\"), VERBATIM_DELIMITED_BRACES(\"link\")]\n  }), CSNAME('hyperref', {\n    contains: [VERBATIM_DELIMITED_BRACES(\"link\")]\n  }), CSNAME('href', ARGUMENT_AND_THEN(ARGUMENT_O, {\n    contains: [VERBATIM_DELIMITED_BRACES(\"link\")]\n  })), ...[].concat(...['', '\\\\*'].map(suffix => [BEGIN_ENV('verbatim' + suffix, VERBATIM_DELIMITED_ENV('verbatim' + suffix)), BEGIN_ENV('filecontents' + suffix, ARGUMENT_AND_THEN(ARGUMENT_M, VERBATIM_DELIMITED_ENV('filecontents' + suffix))), ...['', 'B', 'L'].map(prefix => BEGIN_ENV(prefix + 'Verbatim' + suffix, ARGUMENT_AND_THEN(ARGUMENT_O, VERBATIM_DELIMITED_ENV(prefix + 'Verbatim' + suffix))))])), BEGIN_ENV('minted', ARGUMENT_AND_THEN(ARGUMENT_O, ARGUMENT_AND_THEN(ARGUMENT_M, VERBATIM_DELIMITED_ENV('minted'))))];\n  return {\n    name: 'LaTeX',\n    aliases: ['tex'],\n    contains: [...VERBATIM, ...EVERYTHING_BUT_VERBATIM]\n  };\n}\nmodule.exports = latex;"],"names":["module","exports","hljs","DOUBLE_CARET_VARIANTS","begin","EVERYTHING_BUT_VERBATIM","className","relevance","contains","endsParent","args","map","x","source","re","join","either","word","RegExp","pattern","variants","end","COMMENT","BRACE_GROUP_NO_VERBATIM","ARGUMENT_BRACES","inherit","ARGUMENT_BRACKETS","SPACE_GOBBLER","ARGUMENT_M","ARGUMENT_O","ARGUMENT_AND_THEN","arg","starts_mode","starts","CSNAME","csname","keywords","$pattern","keyword","BEGIN_ENV","envname","VERBATIM_DELIMITED_EQUAL","innerName","END_SAME_AS_BEGIN","excludeBegin","excludeEnd","VERBATIM_DELIMITED_ENV","VERBATIM_DELIMITED_BRACES","name","aliases","concat","suffix","prefix"],"sourceRoot":""}