{"version":3,"file":"react-syntax-highlighter_languages_highlight_abnf/index.js","mappings":"4HAmBA,SAASA,KAAUC,GAEjB,OADeA,EAAKC,KAAIC,IAAKC,OAXfC,EAWsBF,GATlB,iBAAPE,EAAwBA,EAC5BA,EAAGD,OAFM,KADlB,IAAgBC,CAWwB,IAAEC,KAAK,GAE/C,CA4CAC,EAAOC,QAlCP,SAAcC,GACZ,MAAMC,EAAU,CACdC,gBAAiB,yBACjBC,gBAAiB,oBAGbC,EAAcJ,EAAKK,QAAQ,IAAK,KAiBhCC,EAAsB,CAC1BC,UAAW,YACXC,MAAOjB,EAAOU,EAAQC,gBAAiB,aAEzC,MAAO,CACLO,KAAM,6BACNC,QAAST,EAAQE,gBACjBQ,SAzBe,CAAC,QAAS,MAAO,OAAQ,KAAM,OAAQ,MAAO,QAAS,SAAU,SAAU,OAAQ,KAAM,OAAQ,QAAS,KAAM,QAAS,OA0BxIC,SAAU,CAACN,EAAqBF,EAxBP,CACzBG,UAAW,SACXC,MAAO,sCAEmB,CAC1BD,UAAW,SACXC,MAAO,sCAEuB,CAC9BD,UAAW,SACXC,MAAO,+CAE4B,CACnCD,UAAW,SACXC,MAAO,SAUsIR,EAAKa,kBAAmBb,EAAKc,aAE9K,C","sources":["webpack://ai-desktop-knowledge-base-app/./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/abnf.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Augmented Backus-Naur Form\nAuthor: Alex McKibben <alex@nullscope.net>\nWebsite: https://tools.ietf.org/html/rfc5234\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction abnf(hljs) {\n  const regexes = {\n    ruleDeclaration: /^[a-zA-Z][a-zA-Z0-9-]*/,\n    unexpectedChars: /[!@#$^&',?+~`|:]/\n  };\n  const keywords = [\"ALPHA\", \"BIT\", \"CHAR\", \"CR\", \"CRLF\", \"CTL\", \"DIGIT\", \"DQUOTE\", \"HEXDIG\", \"HTAB\", \"LF\", \"LWSP\", \"OCTET\", \"SP\", \"VCHAR\", \"WSP\"];\n  const commentMode = hljs.COMMENT(/;/, /$/);\n  const terminalBinaryMode = {\n    className: \"symbol\",\n    begin: /%b[0-1]+(-[0-1]+|(\\.[0-1]+)+){0,1}/\n  };\n  const terminalDecimalMode = {\n    className: \"symbol\",\n    begin: /%d[0-9]+(-[0-9]+|(\\.[0-9]+)+){0,1}/\n  };\n  const terminalHexadecimalMode = {\n    className: \"symbol\",\n    begin: /%x[0-9A-F]+(-[0-9A-F]+|(\\.[0-9A-F]+)+){0,1}/\n  };\n  const caseSensitivityIndicatorMode = {\n    className: \"symbol\",\n    begin: /%[si]/\n  };\n  const ruleDeclarationMode = {\n    className: \"attribute\",\n    begin: concat(regexes.ruleDeclaration, /(?=\\s*=)/)\n  };\n  return {\n    name: 'Augmented Backus-Naur Form',\n    illegal: regexes.unexpectedChars,\n    keywords: keywords,\n    contains: [ruleDeclarationMode, commentMode, terminalBinaryMode, terminalDecimalMode, terminalHexadecimalMode, caseSensitivityIndicatorMode, hljs.QUOTE_STRING_MODE, hljs.NUMBER_MODE]\n  };\n}\nmodule.exports = abnf;"],"names":["concat","args","map","x","source","re","join","module","exports","hljs","regexes","ruleDeclaration","unexpectedChars","commentMode","COMMENT","ruleDeclarationMode","className","begin","name","illegal","keywords","contains","QUOTE_STRING_MODE","NUMBER_MODE"],"sourceRoot":""}