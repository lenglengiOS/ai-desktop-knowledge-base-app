{"version":3,"file":"react-syntax-highlighter_languages_highlight_nix/index.js","mappings":"4HAgDAA,EAAOC,QAzCP,SAAaC,GACX,MAAMC,EAAe,CACnBC,QAAS,8CACTC,QAAS,yBACTC,SAAU,2FAENC,EAAY,CAChBC,UAAW,QACXC,MAAO,OACPC,IAAK,KACLC,SAAUR,GAWNS,EAAS,CACbJ,UAAW,SACXK,SAAU,CAACN,GACXO,SAAU,CAAC,CACTL,MAAO,KACPC,IAAK,MACJ,CACDD,MAAO,IACPC,IAAK,OAGHK,EAAc,CAACb,EAAKc,YAAad,EAAKe,kBAAmBf,EAAKgB,qBAAsBN,EApB5E,CACZH,MAAO,uBACPU,aAAa,EACbC,UAAW,EACXP,SAAU,CAAC,CACTL,UAAW,OACXC,MAAO,UAgBX,OADAF,EAAUM,SAAWE,EACd,CACLM,KAAM,MACNC,QAAS,CAAC,SACVX,SAAUR,EACVU,SAAUE,EAEd,C","sources":["webpack://ai-desktop-knowledge-base-app/./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/nix.js"],"sourcesContent":["/*\nLanguage: Nix\nAuthor: Domen Ko≈æar <domen@dev.si>\nDescription: Nix functional language\nWebsite: http://nixos.org/nix\n*/\n\nfunction nix(hljs) {\n  const NIX_KEYWORDS = {\n    keyword: 'rec with let in inherit assert if else then',\n    literal: 'true false or and null',\n    built_in: 'import abort baseNameOf dirOf isNull builtins map removeAttrs throw ' + 'toString derivation'\n  };\n  const ANTIQUOTE = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    keywords: NIX_KEYWORDS\n  };\n  const ATTRS = {\n    begin: /[a-zA-Z0-9-_]+(\\s*=)/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [{\n      className: 'attr',\n      begin: /\\S+/\n    }]\n  };\n  const STRING = {\n    className: 'string',\n    contains: [ANTIQUOTE],\n    variants: [{\n      begin: \"''\",\n      end: \"''\"\n    }, {\n      begin: '\"',\n      end: '\"'\n    }]\n  };\n  const EXPRESSIONS = [hljs.NUMBER_MODE, hljs.HASH_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, STRING, ATTRS];\n  ANTIQUOTE.contains = EXPRESSIONS;\n  return {\n    name: 'Nix',\n    aliases: [\"nixos\"],\n    keywords: NIX_KEYWORDS,\n    contains: EXPRESSIONS\n  };\n}\nmodule.exports = nix;"],"names":["module","exports","hljs","NIX_KEYWORDS","keyword","literal","built_in","ANTIQUOTE","className","begin","end","keywords","STRING","contains","variants","EXPRESSIONS","NUMBER_MODE","HASH_COMMENT_MODE","C_BLOCK_COMMENT_MODE","returnBegin","relevance","name","aliases"],"sourceRoot":""}