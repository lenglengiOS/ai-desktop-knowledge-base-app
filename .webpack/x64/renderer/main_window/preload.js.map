{"version":3,"file":"main_window/preload.js","mappings":"iWAEA,MAAM,cAAEA,EAAa,YAAEC,GAAgB,EAAQ,KAE/CD,EAAcE,kBAAkB,cAAe,CAE7CC,SAAU,KACRF,EAAYG,KAAK,WAAW,EAG9BC,SAAU,KACRJ,EAAYG,KAAK,WAAW,EAG9BE,WAAY,IAAY,OAAD,6BAErB,aADmBL,EAAYM,OAAO,cAExC,K,uBCjBFC,EAAOC,QAAUC,QAAQ,W,GCCrBC,EAA2B,CAAC,GAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUI,KAAKT,EAAOC,QAASD,EAAQA,EAAOC,QAASG,GAGpEJ,EAAOC,OACf,CCnB0BG,CAAoB,I","sources":["webpack://ai-desktop-knowledge-base-app/./src/preload.ts","webpack://ai-desktop-knowledge-base-app/external commonjs2 \"electron\"","webpack://ai-desktop-knowledge-base-app/webpack/bootstrap","webpack://ai-desktop-knowledge-base-app/webpack/startup"],"sourcesContent":["// See the Electron documentation for details on how to use preload scripts:\n// https://www.electronjs.org/docs/latest/tutorial/process-model#preload-scripts\nconst { contextBridge, ipcRenderer } = require(\"electron\");\n\ncontextBridge.exposeInMainWorld(\"my_app_name\", {\n  // 最小化\n  minimize: () => {\n    ipcRenderer.send(\"minimize\");\n  },\n  // 最大化\n  maximize: () => {\n    ipcRenderer.send(\"maximize\");\n  },\n  // 选择文件\n  chooseFile: async () => {\n    const path = await ipcRenderer.invoke(\"choose-file\");\n    return path;\n  },\n});\n","module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(714);\n"],"names":["contextBridge","ipcRenderer","exposeInMainWorld","minimize","send","maximize","chooseFile","invoke","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}