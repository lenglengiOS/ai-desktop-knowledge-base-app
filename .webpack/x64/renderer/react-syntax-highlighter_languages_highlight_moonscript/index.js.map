{"version":3,"file":"react-syntax-highlighter_languages_highlight_moonscript/index.js","mappings":"2HAiHAA,EAAOC,QAxGP,SAAoBC,GAClB,MAAMC,EAAW,CACfC,QAEA,6IACAC,QAAS,iBACTC,SAAU,qRAENC,EAAc,2BACdC,EAAQ,CACZC,UAAW,QACXC,MAAO,MACPC,IAAK,KACLC,SAAUT,GAENU,EAAc,CAACX,EAAKY,QAAQZ,EAAKa,cAAe,CACpDC,OAAQ,CACNL,IAAK,WACLM,UAAW,KAIf,CACER,UAAW,SACXS,SAAU,CAAC,CACTR,MAAO,IACPC,IAAK,IACLQ,SAAU,CAACjB,EAAKkB,mBACf,CACDV,MAAO,IACPC,IAAK,IACLQ,SAAU,CAACjB,EAAKkB,iBAAkBZ,MAEnC,CACDC,UAAW,WACXC,MAAO,MAAQR,EAAKmB,UACnB,CACDX,MAAO,IAAMR,EAAKmB,UACjB,CACDX,MAAOR,EAAKmB,SAAW,OAASnB,EAAKmB,WAEvCb,EAAMW,SAAWN,EACjB,MAAMS,EAAQpB,EAAKY,QAAQZ,EAAKqB,WAAY,CAC1Cb,MAAOH,IAEHiB,EAAqB,0BACrBC,EAAS,CACbhB,UAAW,SACXC,MAAO,YACPgB,aAAa,EAGbP,SAAU,CAAC,CACTT,MAAO,KACPC,IAAK,KACLC,SAAUT,EACVgB,SAAU,CAAC,QAAQQ,OAAOd,MAG9B,MAAO,CACLe,KAAM,aACNC,QAAS,CAAC,QACVjB,SAAUT,EACV2B,QAAS,OACTX,SAAUN,EAAYc,OAAO,CAACzB,EAAK6B,QAAQ,KAAM,KAAM,CACrDtB,UAAW,WAEXC,MAAO,QAAUH,EAAc,YAAciB,EAC7Cb,IAAK,QACLe,aAAa,EACbP,SAAU,CAACG,EAAOG,IACjB,CACDf,MAAO,aAEPO,UAAW,EACXE,SAAU,CAAC,CACTV,UAAW,WACXC,MAAOc,EACPb,IAAK,QACLe,aAAa,EACbP,SAAU,CAACM,MAEZ,CACDhB,UAAW,QACXuB,cAAe,QACfrB,IAAK,IACLmB,QAAS,YACTX,SAAU,CAAC,CACTa,cAAe,UACfC,gBAAgB,EAChBH,QAAS,YACTX,SAAU,CAACG,IACVA,IACF,CACDb,UAAW,OAEXC,MAAOH,EAAc,IACrBI,IAAK,IACLe,aAAa,EACbQ,WAAW,EACXjB,UAAW,KAGjB,C","sources":["webpack://ai-desktop-knowledge-base-app/./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/moonscript.js"],"sourcesContent":["/*\nLanguage: MoonScript\nAuthor: Billy Quith <chinbillybilbo@gmail.com>\nDescription: MoonScript is a programming language that transcompiles to Lua.\nOrigin: coffeescript.js\nWebsite: http://moonscript.org/\nCategory: scripting\n*/\n\nfunction moonscript(hljs) {\n  const KEYWORDS = {\n    keyword:\n    // Moonscript keywords\n    'if then not for in while do return else elseif break continue switch and or ' + 'unless when class extends super local import export from using',\n    literal: 'true false nil',\n    built_in: '_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load ' + 'loadfile loadstring module next pairs pcall print rawequal rawget rawset require ' + 'select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug ' + 'io math os package string table'\n  };\n  const JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS\n  };\n  const EXPRESSIONS = [hljs.inherit(hljs.C_NUMBER_MODE, {\n    starts: {\n      end: '(\\\\s*/)?',\n      relevance: 0\n    }\n  }),\n  // a number tries to eat the following slash to prevent treating it as a regexp\n  {\n    className: 'string',\n    variants: [{\n      begin: /'/,\n      end: /'/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }]\n  }, {\n    className: 'built_in',\n    begin: '@__' + hljs.IDENT_RE\n  }, {\n    begin: '@' + hljs.IDENT_RE // relevance booster on par with CoffeeScript\n  }, {\n    begin: hljs.IDENT_RE + '\\\\\\\\' + hljs.IDENT_RE // inst\\method\n  }];\n  SUBST.contains = EXPRESSIONS;\n  const TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  const POSSIBLE_PARAMS_RE = '(\\\\(.*\\\\)\\\\s*)?\\\\B[-=]>';\n  const PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]',\n    returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n  return {\n    name: 'MoonScript',\n    aliases: ['moon'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([hljs.COMMENT('--', '$'), {\n      className: 'function',\n      // function: -> =>\n      begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + POSSIBLE_PARAMS_RE,\n      end: '[-=]>',\n      returnBegin: true,\n      contains: [TITLE, PARAMS]\n    }, {\n      begin: /[\\(,:=]\\s*/,\n      // anonymous function start\n      relevance: 0,\n      contains: [{\n        className: 'function',\n        begin: POSSIBLE_PARAMS_RE,\n        end: '[-=]>',\n        returnBegin: true,\n        contains: [PARAMS]\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '$',\n      illegal: /[:=\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends',\n        endsWithParent: true,\n        illegal: /[:=\"\\[\\]]/,\n        contains: [TITLE]\n      }, TITLE]\n    }, {\n      className: 'name',\n      // table\n      begin: JS_IDENT_RE + ':',\n      end: ':',\n      returnBegin: true,\n      returnEnd: true,\n      relevance: 0\n    }])\n  };\n}\nmodule.exports = moonscript;"],"names":["module","exports","hljs","KEYWORDS","keyword","literal","built_in","JS_IDENT_RE","SUBST","className","begin","end","keywords","EXPRESSIONS","inherit","C_NUMBER_MODE","starts","relevance","variants","contains","BACKSLASH_ESCAPE","IDENT_RE","TITLE","TITLE_MODE","POSSIBLE_PARAMS_RE","PARAMS","returnBegin","concat","name","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd"],"sourceRoot":""}