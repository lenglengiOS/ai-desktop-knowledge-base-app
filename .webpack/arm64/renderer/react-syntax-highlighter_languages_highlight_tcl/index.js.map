{"version":3,"file":"react-syntax-highlighter_languages_highlight_tcl/index.js","mappings":"4HA2BA,SAASA,KAAUC,GAEjB,OADeA,EAAKC,KAAIC,IAAKC,OAnBfC,EAmBsBF,GAjBlB,iBAAPE,EAAwBA,EAC5BA,EAAGD,OAFM,KADlB,IAAgBC,CAmBwB,IAAEC,KAAK,GAE/C,CAgDAC,EAAOC,QAvCP,SAAaC,GACX,MAAMC,EAAY,yBACZC,EAAS,CACbC,UAAW,SACXC,SAAU,CAACJ,EAAKK,mBAAoBL,EAAKM,gBAE3C,MAAO,CACLC,KAAM,MACNC,QAAS,CAAC,MACVC,SAAU,+6BACVC,SAAU,CAACV,EAAKW,QAAQ,YAAa,KAAMX,EAAKW,QAAQ,YAAa,KAAM,CACzEC,cAAe,OACfC,IAAK,QACLC,YAAY,EACZJ,SAAU,CAAC,CACTP,UAAW,QACXY,MAAO,kDACPF,IAAK,eACLG,gBAAgB,EAChBF,YAAY,KAEb,CACDX,UAAW,WACXC,SAAU,CAAC,CACTW,MAAOxB,EAAO,MA5CJK,EA4CmB,KA3C5BL,EAAO,IAAKK,EAAI,OA2CmBK,EAAW,MAAOA,EAAW,OAChE,CACDc,MAAO,2CACPF,IAAK,MACLH,SAAU,CAACR,MAEZ,CACDC,UAAW,SACXO,SAAU,CAACV,EAAKiB,kBAChBb,SAAU,CAACJ,EAAKkB,QAAQlB,EAAKmB,kBAAmB,CAC9CC,QAAS,SAEVlB,IAxDP,IAAkBN,CA0DlB,C","sources":["webpack://ai-desktop-knowledge-base-app/./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/tcl.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Tcl\nDescription: Tcl is a very simple programming language.\nAuthor: Radek Liska <radekliska@gmail.com>\nWebsite: https://www.tcl.tk/about/language.html\n*/\n\nfunction tcl(hljs) {\n  const TCL_IDENT = /[a-zA-Z_][a-zA-Z0-9_]*/;\n  const NUMBER = {\n    className: 'number',\n    variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]\n  };\n  return {\n    name: 'Tcl',\n    aliases: ['tk'],\n    keywords: 'after append apply array auto_execok auto_import auto_load auto_mkindex ' + 'auto_mkindex_old auto_qualify auto_reset bgerror binary break catch cd chan clock ' + 'close concat continue dde dict encoding eof error eval exec exit expr fblocked ' + 'fconfigure fcopy file fileevent filename flush for foreach format gets glob global ' + 'history http if incr info interp join lappend|10 lassign|10 lindex|10 linsert|10 list ' + 'llength|10 load lrange|10 lrepeat|10 lreplace|10 lreverse|10 lsearch|10 lset|10 lsort|10 ' + 'mathfunc mathop memory msgcat namespace open package parray pid pkg::create pkg_mkIndex ' + 'platform platform::shell proc puts pwd read refchan regexp registry regsub|10 rename ' + 'return safe scan seek set socket source split string subst switch tcl_endOfWord ' + 'tcl_findLibrary tcl_startOfNextWord tcl_startOfPreviousWord tcl_wordBreakAfter ' + 'tcl_wordBreakBefore tcltest tclvars tell time tm trace unknown unload unset update ' + 'uplevel upvar variable vwait while',\n    contains: [hljs.COMMENT(';[ \\\\t]*#', '$'), hljs.COMMENT('^[ \\\\t]*#', '$'), {\n      beginKeywords: 'proc',\n      end: '[\\\\{]',\n      excludeEnd: true,\n      contains: [{\n        className: 'title',\n        begin: '[ \\\\t\\\\n\\\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\n        end: '[ \\\\t\\\\n\\\\r]',\n        endsWithParent: true,\n        excludeEnd: true\n      }]\n    }, {\n      className: \"variable\",\n      variants: [{\n        begin: concat(/\\$/, optional(/::/), TCL_IDENT, '(::', TCL_IDENT, ')*')\n      }, {\n        begin: '\\\\$\\\\{(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\n        end: '\\\\}',\n        contains: [NUMBER]\n      }]\n    }, {\n      className: 'string',\n      contains: [hljs.BACKSLASH_ESCAPE],\n      variants: [hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        illegal: null\n      })]\n    }, NUMBER]\n  };\n}\nmodule.exports = tcl;"],"names":["concat","args","map","x","source","re","join","module","exports","hljs","TCL_IDENT","NUMBER","className","variants","BINARY_NUMBER_MODE","C_NUMBER_MODE","name","aliases","keywords","contains","COMMENT","beginKeywords","end","excludeEnd","begin","endsWithParent","BACKSLASH_ESCAPE","inherit","QUOTE_STRING_MODE","illegal"],"sourceRoot":""}