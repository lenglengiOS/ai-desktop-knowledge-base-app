name: AutoBuild  # 工作流的名称

permissions:
  contents: write  # 给予写入仓库内容的权限

on:
  push

jobs:
  release:
    name: build and release electron app  # 任务名称
    runs-on: ${{ matrix.os }}  # 在matrix.os定义的操作系统上运行
       
    strategy:
       fail-fast: false  # 如果一个任务失败,其他任务继续运行
       matrix:
         os: [windows-latest, macos-latest]  # 在Windows和macOS上运行任务
         arch: [x64, arm64]

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Check out git repository
        uses: actions/checkout@v4  # 检出代码仓库

      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.19.0  # 安装Node.js 18.19.0 （这里node环境是能够运行代码的环境）

      
          
      - name: 安装 yarn
        run: 
           npm install -g yarn
       
      - name: Install Dependencies
        run: 
          yarn install  # 安装项目依赖

          
      - name: Build Electron App for windows
        if: matrix.os == 'windows-latest'  # 只在Windows上运行
        run: yarn make  # 构建Windows版应用

      - name: Build Electron App for macos
        if: matrix.os == 'macos-latest'  # 只在macOS上运行
        run: 
          yarn make

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: out  # 上传构建产物作为工作流artifact

      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')  # 只在推送标签时创建release
        with:
          files: 'out/**'  # 将out目录下所有文件添加到release

     



     
